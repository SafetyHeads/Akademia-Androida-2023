plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
}

android {
    namespace 'com.safetyheads.domainmodule'
    compileSdk 33

    defaultConfig {
        minSdk 24
        targetSdk 33
        def VERSION_NAME_MAJOR = 1
        def VERSION_NAME_MINOR = 0
        def VERSION_NAME_PATCH = 0
        def NAME_APPLICATION = "SafetyHeads"
        versionName = "$NAME_APPLICATION $VERSION_NAME_MAJOR.$VERSION_NAME_MINOR.$VERSION_NAME_PATCH"
        versionCode = generateVersionCode(VERSION_NAME_MAJOR, VERSION_NAME_MINOR, VERSION_NAME_PATCH)

        Properties properties = new Properties()
        File localPropertiesFile = project.rootProject.file("local.properties")

        if (localPropertiesFile.exists()) {
            properties.load(localPropertiesFile.newDataInputStream())
            buildConfigField("String", "YOUTUBE_DATA_API_KEY", "\"${properties.getProperty("YOUTUBE_DATA_API_KEY")}\"")
        } else {
            buildConfigField("String", "YOUTUBE_DATA_API_KEY", "\"\"")
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}


dependencies {
    implementation 'com.jakewharton.threetenabp:threetenabp:1.3.0'
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.0")
    testImplementation 'junit:junit:4.13.2'
}

private static Integer generateVersionCode(Integer VERSION_NAME_MAJOR, Integer VERSION_NAME_MINOR, Integer VERSION_NAME_PATCH) {
    Integer versionCode = VERSION_NAME_MAJOR * 10000 + VERSION_NAME_MINOR * 100 + VERSION_NAME_PATCH
    return versionCode
}